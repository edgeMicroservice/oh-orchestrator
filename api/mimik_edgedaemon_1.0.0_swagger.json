{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Edge Daemon Service",
    "description": "ohorchestrator is used for IBM OpenHorizon and mimik edgeEngine integration using mdeploy."
  },
  "basePath": "/ohorchestrator/v1",
  "schemes": [
    "https",
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "tags": [
    {
      "name": "System",
      "description": "system operations"
    }
  ],
  "responses": {
    "400": {
      "description": "Validation error",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "403": {
      "description": "Unauthorized",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "404": {
      "description": "Not found",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "409": {
      "description": "Conflict, resource already exist",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "500": {
      "description": "System error",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    }
  },
  "securityDefinitions": {
    "SystemSecurity": {
      "type": "oauth2",
      "tokenUrl": "https://mst.mimik360.com/oauth/token",
      "flow": "application",
      "scopes": {
        "create:image": "create image",
        "read:nodes": "read nodes",
        "read:nodeDetails": "read nodes details",
        "read:daemons": "read daemons"
      }
    },
    "AdminSecurity": {
      "type": "oauth2",
      "tokenUrl": "https://mst.mimik360.com/oauth/token",
      "flow": "application",
      "scopes": {
        "read:system": "read system"
      }
    }
  },
  "paths": {
    "/healthcheck": {
      "get": {
        "description": "Retrieves health check information about the server. You can use this endpoint to ensure the application is up and running.",
        "summary": "Retrieves server health check information.",
        "operationId": "getHealthCheck",
        "x-swagger-router-controller": "systemController",
        "tags": [
          "Admin"
        ],
        "responses": {
          "200": {
            "description": "Health Check Information",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object"
                }
              }
            }
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      }
    },
    "/systeminfo": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "get system information of the service",
        "x-swagger-router-controller": "systemController",
        "operationId": "getSystemInfo",
        "security": [
          {
            "AdminSecurity": [
              "read:system"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "System information",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object"
                }
              }
            }
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      }
    },
    "/nodes": {
      "get": {
        "tags": [
          "System"
        ],
        "summary": "fetch edge nodes",
        "x-swagger-router-controller": "nodeController",
        "operationId": "getNodes",
        "security": [
          {
            "SystemSecurity": [
              "read:nodes"
            ]
          }
        ],
        "parameters": [
          {
            "name": "mdeployStatus",
            "description": "To filter by mdeployStatus of the node",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "active",
                "inactive",
                "not_found"
              ]
            },
            "minItems": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Nodes information",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Node"
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      }
    },
    "/nodes/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "type": "string",
          "required": true
        }
      ],
      "get": {
        "tags": [
          "System"
        ],
        "summary": "fetch edge node details",
        "x-swagger-router-controller": "nodeController",
        "operationId": "getNodeDetails",
        "security": [
          {
            "SystemSecurity": [
              "read:nodeDetails"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Node details",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/NodeDetail"
                }
              }
            }
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      }
    }
  },
  "definitions": {
    "Error": {
      "type": "object",
      "properties": {
        "statusCode": {
          "type": "number",
          "format": "int32"
        },
        "title": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "info": {
          "type": "object"
        }
      },
      "required": [
        "statusCode",
        "title",
        "message"
      ]
    },
    "AttributeNameValuePair": {
      "description": "Properties assigned by edgeEngine or user of the device",
      "type": "object",
      "required": [
        "name",
        "value"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "name"
        },
        "value": {
          "type": "string",
          "example": "Teacher_1"
        }
      }
    },
    "CharactersticsNameValuePair": {
      "description": "Physical properties of the device",
      "type": "object",
      "required": [
        "name",
        "value"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "os"
        },
        "value": {
          "type": "string",
          "example": "linux"
        }
      }
    },
    "Node": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "cf7e1fe96eb34565dc62bcf76442c6bf2c7c3aba5258528c783d3ecd"
        },
        "attributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AttributeNameValuePair"
          }
        },
        "characteristics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CharactersticsNameValuePair"
          }
        },
        "isGatewayNode": {
          "type": "boolean"
        },
        "mdeployStatus": {
          "type": "string",
          "enum": [
            "active",
            "inactive",
            "not_found"
          ]
        },
        "anaxState": {
          "type": "object",
          "required": [
            "status",
            "availableNodePort"
          ],
          "properties": {
            "status": {
              "description": "Managment Hub exchange registration status of anax node",
              "type": "string",
              "enum": [
                "configured",
                "unconfigured"
              ]
            },
            "availableNodePort": {
              "description": "Anax node container's locally exposed port on gateway machine",
              "type": "number",
              "example": 8200
            }
          }
        }
      }
    },
    "AnaxSocketDetails": {
      "type": "object",
      "required": [
        "logs"
      ],
      "properties": {
        "logs": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "request received on socket"
          }
        }
      }
    },
    "NodeDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Node"
        }
      ],
      "properties": {
        "anaxSocketDetails": {
          "allOf": [
            {
              "$ref": "#/definitions/AnaxSocketDetails"
            }
          ]
        }
      }
    }
  }
}